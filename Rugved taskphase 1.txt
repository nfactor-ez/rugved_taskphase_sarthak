Rugved taskphase 1

Q1
def triple_and(a, b, c):
    # Return True if all are True or all are False
    if (a and b and c) or (not a and not b and not c):
        return True
    else:
        return False

# Example values for a, b, and c
a = False
b = False
c = False

# Output the result of the function
print(triple_and(a, b, c))  

***Q 2 Write a python program to sort a string alphabetically and print the 
count of each character ***

str1 =input("enter the string to sort")
str=str1.replace(" ","")
newstr=sorted(str)
print(newstr)
print(len(str1.split()))

num = int(input("Enter the number to check whether it is a hill number or not: "))


def odd_check(r):
    if r % 2 == 0 or r < 3:
        return False
    else:
        return True


def hill_number(num):
    n = [int(d) for d in str(num)]
    r = len(n)

    if not odd_check(r):
        return False

    ind = 0
    for i in range(1, len(n)):
        if n[i] > n[i - 1]:
            ind = i
        else:
            break

    if ind == 0 or ind == r - 1:
        return False

    for i in range(ind + 1, len(n)):
        if n[i] >= n[i - 1]:
            return False

    return True


print(hill_number(num))
 
***Q4 selection sort ***

def selection_sort(arr):
    for i in range(len(arr)):
        min_idx = i
        for j in range(i+1, len(arr)):
            if arr[j] < arr[min_idx]:
                min_idx = j
        arr[i], arr[min_idx] = arr[min_idx], arr[i]

arr1 = input("Enter numbers separated by commas: ")
arr = [int(item.strip()) for item in arr1.split(",")]

print("Original list:", arr)
selection_sort(arr)
print("Sorted list:", arr)

***Q5 Find the factorial of a given number using recursion.***
def factorial(n):
    if(n==0 or n==1):
        return 1
    else:
        return n*factorial(n-1)
n=int(input("enter the number to find out a factorial"))
print(factorial(n))

***Q6 Create a function that checks whether given string is an anagram or 
not? ***

def anagram(str1,str2):
    str1 = str1.replace(" ", "").lower()
    str2 = str2.replace(" ", "").lower()
    if(len(str1)!=len(str2)):
        return False
    if(sorted(str1)==sorted(str2)):
        return True
str1=input("enter first string")
str2=input("enter second string")
if(anagram(str1,str2)):
    print("yes the string is an anagram")
else:
    print("sorry sir")

***Q7Write a program to print the Fibonacci Sequence till n-values where n 
is user input.***

def fibonacci(n):
    a=0
    b=1
    c=0
    for i in range(n):
        print(c)
        a=b
        b=c
        c=a+b
n=int(input("enter the number:"))
print(fibonacci(n))

***Q8 Write a python program to divide a given string into equal parts 
containing n(user input) characters of same sequence.
Example: string=“abcdabcdabcdabcd”
 n=4
 output: “abcd”, “abcd”, “abcd”, “abcd”
def divide_string(s, n):
    if n <= 0 or n > len(s):
        return "Invalid input: n must be a positive integer and less than or equal to the length of the string."
    
    parts = [s[i:i+n] for i in range(0, len(s), n)]
    
    return parts

string = "abcdabcdabcdabcd"
n = int(input("Enter the number of characters in each part: "))

result = divide_string(string, n)

print(", ".join(result))
If the division is not possible or the sequence cannot be same, print 
out the appropriate error.***
***Q9 Write a python function to encrypt a string using Ceasar’s Cipher***
str = input("What is your plaintext? ")
shift = int(input("What is your shift? "))
def caesar(str, shift):
    cipher = ""
    for ch in str:
        if ch.isalpha():
            change = ord(ch) + shift
            if ch.islower() and change > ord('z'):
                change -= 26
            final1 = chr(change)
        cipher += final1
    print("Your ciphertext is:", cipher)
    return cipher
caesar(str, shift)
***Q10 Write a python function to check if a given credit card number is valid 
or not using Luhn’s Algorithm.***
def is_valid_credit_card(card_number):
    digits = [int(d) for d in str(card_number)[::-1]]

    for i in range(1, len(digits), 2):
        digits[i] *= 2
        if digits[i] > 9:
            digits[i] -= 9

    total_sum = sum(digits)

    return total_sum % 10 == 0


card_number = int(input("Enter the credit card number: "))
print(is_valid_credit_card(card_number))


 
